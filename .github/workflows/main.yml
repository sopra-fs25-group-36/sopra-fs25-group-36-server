name: Deploy Project to App Engine

on:
  push:
    branches:
      - main

  # run the workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    name: Test and Sonarqube
    runs-on: ubuntu-latest
    # services:
    #   postgres:
    #     image: postgres
    #     env:
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_USER: postgres
    #       POSTGRES_DB: postgres 
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       - 5432:5432

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Install Java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Test and analyze
        run: ./gradlew test jacocoTestReport sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONARCLOUD_TOKEN: ${{ secrets.SONAR_TOKEN }}
          ALPHAVANTAGE_API_KEY: ${{ secrets.API_KEY }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_URL: jdbc:postgresql://fs25-sopra36-dbs-sopra-gr36-db.k.aivencloud.com:19869/defaultdb?sslmode=require
          # DATABASE_URL: jdbc:postgresql://localhost:5432/postgres

  deploy:
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    # needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v0.2.0
        with:
          deliverables: app.yaml
          version: v1
          credentials: ${{ secrets.GCP_SERVICE_CREDENTIALS }}
          env_vars: |-
            DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
        

      - name: Test
        run: curl "${{ steps.deploy.outputs.url }}"
